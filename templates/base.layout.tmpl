{{define "base"}}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Corvins' Castle</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet"
        href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/css/datepicker-bs5.min.css">
    <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Merriweather&display=swap" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="/static/css/styles.css">
    <style>
        .my-footer {
            height: 10em;
            background-color: #292b2c;
            /* margin-top: 2em; */
            padding: 1.5em;
            color: white;
            font-size: 75%;
            overflow-x: hidden;
        }
        body {
            --bs-font-sans-serif: "Merriweather", serif;
            --bs-body-font-family: var(--bs-font-sans-serif);
        }

        .carousel-item img {
            height: 750px;
            width: 100%;
            object-fit: cover;
            object-position: center;
        }

        .paper-block {
            background-color: #ffffff;
            background-image: url('static/images/exclusive-paper.png');
            background-repeat: repeat;
            background-size: auto;
            text-align: center;
            box-shadow: 0 2px 8px rgba(0,0,0,0.05);
        }

        .navbar {
            background-color: #ffffff;
            background-image: url('static/images/exclusive-paper.png');
        }
    </style>
</head>

<body>
    <nav class="navbar navbar-expand-lg bg-transparent">
        <div class="container-fluid">
            <a class="navbar-brand" href="#"></a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false"
                aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="/">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/about">About</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown"
                            aria-expanded="false">
                            Rooms
                        </a>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="/knights">Knights' Hall</a></li>
                            <li><a class="dropdown-item" href="/throne">Throne Room</a></li>
                            <li><a class="dropdown-item" href="/banquet">Banquet Hall</a></li>
                        </ul>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/contact">Contact</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/booking">Booking</a>
                    </li>
                </ul>
                <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        {{if eq .IsAuthenticated 1}}
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown"
                                    aria-expanded="false">
                                    Admin
                                </a>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="/admin/dashboard">Dashboard</a></li>
                                    <li><a class="dropdown-item" href="/user/logout">Logout</a></li>
                                </ul>
                            </li>
                        {{else}}
                            <a class="nav-link" href="/user/login">Login</a>
                        {{end}}
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    {{block "content" .}}

    {{end}}

    <footer class="row my-footer">
        <div class="row">
            <div class="col text-center">
                <strong>Corvins' Castle</strong><br>
                Hunedoara, Hunedoara County<br>
                Romania<br>
            </div>
            <div class="col text-center">
                Copyrights © http://localhost:8080 2025<br>
                <a href="https://geohack.toolforge.org/geohack.php?pagename=Corvin_Castle&params=45_44_57_N_22_53_18_E_type:landmark_region:RO">45°44`5``N 22°53`18``E</a><br>
                +40555048718<br>
            </div>
            <div class="col text-center">
                FESTIVALUL MEDIEVAL august 29, 2024<br>
            </div>
        </div>
    </footer>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
        integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"
        integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/js/datepicker-full.min.js"></script>
    <script src="https://unpkg.com/notie"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    {{block "js" .}}

    {{end}}
    <script>
        let attention = prompt();

        (function () {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            const forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            })
        })()

        function notify(msg, msgType) {
            notie.alert({
                type: msgType, // optional, default = 4, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']
                text: msg,
                stay: false, // optional, default = false
                time: 3, // optional, default = 3, minimum = 1,
                position: top // optional, default = 'top', enum: ['top', 'bottom']
            })
        }

        function notifyModal(title, text, icon, confirmButtonText) {
            Swal.fire({
                title: title,
                text: text,
                icon: icon,
                confirmButtonText: confirmButtonText
            })
        }

        {{with .Error}}
        notify("{{.}}", "error")
        {{end}}

        {{with .Flash}}
        notify("{{.}}", "success")
        {{end}}

        {{with .Warning}}
        notify("{{.}}", "warning")
        {{end}}

        function prompt() {
            let toast = function (c) {
                const {
                    title = "",
                    icon = "success",
                    position = "top-end"
                } = c;

                const Toast = Swal.mixin({
                    toast: true,
                    title: title,
                    position: position,
                    icon: icon,
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.onmouseenter = Swal.stopTimer;
                        toast.onmouseleave = Swal.resumeTimer;
                    }
                });
                Toast.fire({});
            }
            let success = function (c) {
                const {
                    msg = "",
                    title = "",
                    footer = "",
                } = c;

                Swal.fire({
                    icon: "success",
                    title: title,
                    text: msg,
                    footer: footer,
                });
            }
            let error = function (c) {
                const {
                    msg = "",
                    title = "",
                    footer = "",
                } = c;

                Swal.fire({
                    icon: "error",
                    title: title,
                    text: msg,
                    footer: footer,
                });
            }

            async function custom(c) {
                const {
                    icon = "",
                    msg = "",
                    title = "",
                    showConfirmButton = true,
                } = c;

                const { value: formValues } = await Swal.fire({
                    icon: icon,
                    title: title,
                    html: msg,
                    backdrop: false,
                    focusConfirm: false,
                    showCancelButton: true,
                    showConfirmButton: showConfirmButton,
                    willOpen: () => {
                        if (c.willOpen !== undefined) {
                            c.willOpen();
                        }
                    },
                    preConfirm: () => {
                        return [
                            document.getElementById("start").value,
                            document.getElementById("end").value
                        ];
                    },
                    didOpen: () => {
                        if (c.didOpen !== undefined) {
                            c.didOpen();
                        }
                    }
                })

                if (formValues) {
                    if (formValues.dismiss !== Swal.DismissReason.cancel) {
                        if (formValues.value !== "") {
                            if (c.callback !== undefined) {
                                c.callback(formValues);
                            }
                        } else {
                            c.callback(false);
                        }
                    } else {
                        c.callback(false);
                    }
                }
            }

            return {
                toast: toast,
                success: success,
                error: error,
                custom: custom,
            }
        }

    </script>
</body>

</html>
{{end}}